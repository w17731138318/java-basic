server:
    port: 80

#spring
spring:
##多数据源
#  profiles: dynamic
#    autoconfigure:
#      exclude:
#      # 多数据源场景会导致 `javax.sql.DataSource` 和 `org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer`
#      # 循环依赖，所以需要手动排除 `org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration`
#        - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
##默认数据源
#  profiles:
#    # 默认环境为 default，多数据源演示请改为 dynamic
#    active: default
  output:
    ansi:
      enabled: detect
  datasource:
#    master:
#      driver-class-name: com.mysql.jdbc.Driver
#      url: jdbc:mysql://localhost:3306/springboot?useUnicode=true&characterEncoding=utf8
#      username: root
#      password: root
#    slave:
#      driver-class-name: com.mysql.jdbc.Driver
#      url: jdbc:mysql://localhost:3306/springboot?useUnicode=true&characterEncoding=utf8
#      username: root
#      password: root
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/springboot?useUnicode=true&characterEncoding=utf8
    username: root
    password: root
#    schema: classpath:/import.sql
    druid:
      # spring.datasource.druid 前缀的配置将注入到 DruidDataSource2Support，作为公共参数
      initial-size: 1
      min-idle: 1
      max-active: 10
      max-wait: 30000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 1800000
      max-evictable-idle-time-millis: 25200000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-open-prepared-statements: 20
      use-global-data-source-stat: true
      # 默认开启，当前已开启
      stat:
        log-slow-sql: true
        slow-sql-millis: 1000
      # 默认关闭，需手动开启，当前已开启
      slf4j:
        enabled: true
        connection-log-enabled: false
        statement-sql-format-option:
          upp-case: true
          pretty-format: false
        statement-executable-sql-log-enable: true
        result-set-log-enabled: false
      # 默认关闭，需手动开启，当前已开启
      wall:
        enabled: true
        log-violation: true
        throw-exception: false
        config:
          delete-where-none-check: true
      # 默认关闭，需手动开启，当前已关闭
      config:
        enabled: false
      # 默认关闭，需手动开启，当前已关闭
      web-stat:
        enabled: false
      # 默认关闭，需手动开启，当前已关闭
      aop-stat:
        enabled: false
      # 默认关闭，需手动开启，当前已关闭
      stat-view-servlet:
        enabled: false
  transaction:
    rollback-on-commit-failure: true
  aop:
    auto: true
    proxy-target-class: true
  http:
    encoding:
      force: true
    converters:
      preferred-json-mapper: jackson


#mybatis
mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.mybatis.plus.entity
  typeEnumsPackage: com.mybatis.plus.entity.enums
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 2
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    #序列接口实现类配置
    #key-generator: com.baomidou.springboot.xxx
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 0
    logic-not-delete-value: 1
    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现
    #meta-object-handler: com.baomidou.springboot.xxx
    #自定义SQL注入器
    #sql-injector: com.baomidou.springboot.xxx
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false


debug: false

#logging
logging:
  level: warn